<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
   xmlns:context="http://www.springframework.org/schema/context" 
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd ">
	
	<!-- 2.指定Spring读取properties配置文件，建议在properties文件关键字前加前缀，如jdbc.jdbcUrl -->
	<context:property-placeholder location="classpath:db.properties" />
	
		 
	<!-- 3.将连接池注入Spring容器 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 通过set方法设置属性,读取配置文件 -->
		<!-- ${key}这样的表达式在XML中，代表引入的properties文件中key对应的一个变量值，完全是靠第三方jar自己解析的。 -->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
		<property name="driverClass" value="${jdbc.driverClass}" ></property>
		<property name="user" value="${jdbc.user}" ></property>
		<property name="password" value="${jdbc.password}" ></property>
	</bean>
	
	<!-- 4.事务核心管理器，封装了所有事务操作，依赖于连接池 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 5.事务模板对象 ,调用transactionManager中方法管理事务，依赖于事务核心管理器(不同平台有不同的模板对象)-->
	<bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate" >
		<property name="transactionManager" ref="transactionManager" ></property>
	</bean>
	 
	<!-- 6.将AccountDaoImpl放入spring容器 -->
	<bean name="accountDao" class="cn.wells.transaction.AccountDaoImpl" >
		<property name="dataSource" ref="dataSource"></property>
		<!-- UserDaoImpl继承JdbcDaoSupport类，AccountDaoImpl继承了父类的setDataSource()方法,
			 因此会将该方法设置进父类的JdbcTemplate对象中去(看源码，别猜测) -->
	</bean>
	
	<!-- 7.AccountServiceImpl -->
	<bean name="accountService" class="cn.wells.transaction.AccountServiceImpl" >
		<property name="ad" ref="accountDao"></property>
		<property name="tt" ref="transactionTemplate"></property>
	</bean>
	
	
</beans>